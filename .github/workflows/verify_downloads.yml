
name: Downloadable Content

on:
  schedule:
    - cron: '0 8 * * 0' # run every sunday at (around) 8:00am UTC
  workflow_dispatch:
    inputs:
      dataset:
        description: "Top-level dataset ID to run (or leave blank for all)" 
        required: false
        default: ''

jobs:

  antique:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'antique'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^antique/" --output "antique.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "antique.json"
        path: "antique.json"

  aquaint:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'aquaint'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^aquaint/" --output "aquaint.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "aquaint.json"
        path: "aquaint.json"

  beir:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'beir'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^beir/" --output "beir.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "beir.json"
        path: "beir.json"

  c4:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'c4'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^c4/" --output "c4.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "c4.json"
        path: "c4.json"

  car:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'car'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^car/" --output "car.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "car.json"
        path: "car.json"

  clinicaltrials:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'clinicaltrials'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^clinicaltrials/" --output "clinicaltrials.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "clinicaltrials.json"
        path: "clinicaltrials.json"

  clirmatrix:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'clirmatrix'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^clirmatrix/" --output "clirmatrix.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "clirmatrix.json"
        path: "clirmatrix.json"

  clueweb09:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'clueweb09'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^clueweb09/" --output "clueweb09.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "clueweb09.json"
        path: "clueweb09.json"

  clueweb12:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'clueweb12'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^clueweb12/" --output "clueweb12.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "clueweb12.json"
        path: "clueweb12.json"

  codesearchnet:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'codesearchnet'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^codesearchnet/" --output "codesearchnet.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "codesearchnet.json"
        path: "codesearchnet.json"

  cord19:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'cord19'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^cord19/" --output "cord19.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "cord19.json"
        path: "cord19.json"

  cranfield:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'cranfield'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^cranfield/" --output "cranfield.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "cranfield.json"
        path: "cranfield.json"

  dpr-w100:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'dpr-w100'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^dpr-w100/" --output "dpr-w100.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "dpr-w100.json"
        path: "dpr-w100.json"

  gov:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'gov'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^gov/" --output "gov.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "gov.json"
        path: "gov.json"

  gov2:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'gov2'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^gov2/" --output "gov2.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "gov2.json"
        path: "gov2.json"

  highwire:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'highwire'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^highwire/" --output "highwire.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "highwire.json"
        path: "highwire.json"

  medline:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'medline'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^medline/" --output "medline.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "medline.json"
        path: "medline.json"

  mmarco:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'mmarco'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^mmarco/" --output "mmarco.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "mmarco.json"
        path: "mmarco.json"

  mr-tydi:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'mr-tydi'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^mr-tydi/" --output "mr-tydi.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "mr-tydi.json"
        path: "mr-tydi.json"

  msmarco-document:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'msmarco-document'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^msmarco-document/" --output "msmarco-document.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "msmarco-document.json"
        path: "msmarco-document.json"

  msmarco-document-v2:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'msmarco-document-v2'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^msmarco-document-v2/" --output "msmarco-document-v2.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "msmarco-document-v2.json"
        path: "msmarco-document-v2.json"

  msmarco-passage:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'msmarco-passage'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^msmarco-passage/" --output "msmarco-passage.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "msmarco-passage.json"
        path: "msmarco-passage.json"

  msmarco-passage-v2:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'msmarco-passage-v2'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^msmarco-passage-v2/" --output "msmarco-passage-v2.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "msmarco-passage-v2.json"
        path: "msmarco-passage-v2.json"

  msmarco-qna:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'msmarco-qna'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^msmarco-qna/" --output "msmarco-qna.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "msmarco-qna.json"
        path: "msmarco-qna.json"

  natural-questions:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'natural-questions'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^natural-questions/" --output "natural-questions.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "natural-questions.json"
        path: "natural-questions.json"

  nfcorpus:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'nfcorpus'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^nfcorpus/" --output "nfcorpus.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "nfcorpus.json"
        path: "nfcorpus.json"

  nyt:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'nyt'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^nyt/" --output "nyt.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "nyt.json"
        path: "nyt.json"

  pmc:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'pmc'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^pmc/" --output "pmc.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "pmc.json"
        path: "pmc.json"

  trec-arabic:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'trec-arabic'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^trec-arabic/" --output "trec-arabic.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "trec-arabic.json"
        path: "trec-arabic.json"

  trec-fair-2021:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'trec-fair-2021'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^trec-fair-2021/" --output "trec-fair-2021.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "trec-fair-2021.json"
        path: "trec-fair-2021.json"

  trec-mandarin:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'trec-mandarin'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^trec-mandarin/" --output "trec-mandarin.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "trec-mandarin.json"
        path: "trec-mandarin.json"

  trec-robust04:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'trec-robust04'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^trec-robust04/" --output "trec-robust04.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "trec-robust04.json"
        path: "trec-robust04.json"

  trec-spanish:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'trec-spanish'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^trec-spanish/" --output "trec-spanish.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "trec-spanish.json"
        path: "trec-spanish.json"

  tripclick:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'tripclick'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^tripclick/" --output "tripclick.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "tripclick.json"
        path: "tripclick.json"

  tweets2013-ia:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'tweets2013-ia'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^tweets2013-ia/" --output "tweets2013-ia.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "tweets2013-ia.json"
        path: "tweets2013-ia.json"

  vaswani:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'vaswani'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^vaswani/" --output "vaswani.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "vaswani.json"
        path: "vaswani.json"

  wapo:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'wapo'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^wapo/" --output "wapo.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "wapo.json"
        path: "wapo.json"

  wikir:
    if: "!github.event.inputs.dataset || github.event.inputs.dataset == 'wikir'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test
      env:
        IR_DATASETS_DL_DISABLE_PBAR: 'true'
      run: |
        python -m test.downloads --filter "^wikir/" --output "wikir.json" --randdelay 60
    - name: Upload artifact
      if: always() # don't skip if the Test step fails (defeats the whole purpose)
      uses: actions/upload-artifact@v2
      with:
        name: "wikir.json"
        path: "wikir.json"
